---

- name: Gather info about the pod
  become: "{{ podman_rootless | d(true) | bool }}"
  become_user: "{{ podman_user if podman_rootless | d(true) | bool else omit }}"
  containers.podman.podman_pod_info:
    name: "{{ pod_name }}"
  register: _pod_info
  when:
    - pod_name is defined
    - pod_name | length > 0

- name: Create the pod
  become: "{{ podman_rootless | d(true) | bool }}"
  become_user: "{{ podman_user if podman_rootless | d(true) | bool else omit }}"
  containers.podman.podman_pod:
    name: "{{ pod_name }}"
    publish: "{{ pod_published_ports | default(omit) }}"
    hostname: "{{ pod_name }}"
    generate_systemd:
      path: "{{ _systemd_service_files_dir }}"
      restart_policy: always
    network: "{{ podman_network_name }}"
    state: started
  register: _pod_create_result
  when:
    - pod_name is defined
    - pod_name | length > 0
    # - _pod_info.pods | length == 0
- debug: var=_pod_create_result
- pause:
- name: Enable systemd service for pod
  become: "{{ podman_rootless | d(true) | bool }}"
  become_user: "{{ podman_user if podman_rootless | d(true) | bool else omit }}"
  environment:
    XDG_RUNTIME_DIR: "{{ _xdg_runtime_dir }}"
  ansible.builtin.systemd:
    name: "{{ 'pod-' + pod_name }}"
    enabled: true
    scope: "{{ _systemd_scope }}"
  when:
    - pod_name is defined
    - pod_name | length > 0
    # - _pod_info.pods | length == 0

