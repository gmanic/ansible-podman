---

- name: Podman | podman_init_vars | find uid of user
  become: "{{ podman_rootless | d(true) | bool }}"
  become_user: "{{ podman_user | d('podman') if podman_rootless | d(true) | bool else omit }}"
  ansible.builtin.command: "id -u"
  register: _container_run_as_uid
  check_mode: false
  changed_when: false
  tags: always

- name: Podman | podman_init_vars | set facts depending on podman_rootless
  ansible.builtin.set_fact:
    _container_storage_dir_base_local: "{{ container_storage_dir_base_local + '/' + podman_user | d('podman') + '/container_data'
        if podman_rootless | bool else container_storage_dir_base_local }}"
    _container_storage_dir_base: "{{ container_storage_dir_base + '/' + podman_user | d('podman') + '/container_data'
        if podman_rootless | bool else container_storage_dir_base }}"
    _group: "{{ podman_group | d('podman') if podman_rootless | bool else 'root' }}"
    _owner: "{{ podman_user | d('podman') if podman_rootless | bool else 'root' }}"
    _systemd_scope: "{{ 'user' if podman_rootless | bool else 'system' }}"
    _systemd_service_files_dir: "{{ container_storage_dir_base_local + '/' + podman_user | d('podman') + '/.config/systemd/user/'
        if podman_rootless | bool else '/etc/systemd/system/' }}"
    _xdg_runtime_dir: "/run/user/{{ _container_run_as_uid.stdout }}"
    # __podman_xdg_runtime_dir: >-
    #   /run/user/{{ ansible_facts["getent_passwd"][__podman_user][1] }}
    # __podman_user_home_dir: "{{
    #   ansible_facts['getent_passwd'][__podman_user][4] }}"
    # __podman_systemd_scope: "{{ __podman_systemd_unit_scope
    #   if __podman_systemd_unit_scope
    #   and __podman_systemd_unit_scope | length > 0
    #   else __podman_rootless | ternary('user', 'system') }}"
  changed_when: false
  tags: always
