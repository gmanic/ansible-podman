---

- name: Podman systemd restart pod or container become block
  become: "{{ podman_rootless | d(true) | bool }}"
  become_user: "{{ podman_user if podman_rootless | d(true) | bool else omit }}"
  tags:
    - podman_systemd_restart_pod_or_container
  block:
    - name: Podman systemd restart pod or container | gather info about the pod {{ target }}
      containers.podman.podman_pod_info:
        name: "{{ target }}"
      register: _pod_info
    # - debug: var=_pod_info
    # - debug:
    #     msg: "{{ _pod_info.pods[0].State }}"
    # - pause:

    - name: Podman systemd restart pod or container | check for pod description for {{ target }}
      ansible.builtin.shell: |
        set +o pipefail
        /usr/lib/systemd/system-generators/podman-system-generator 2> /dev/null {{
        '-user' if podman_rootless | d(true) | bool else '' }} -dryrun | grep -q {{ target ~ '-pod.service' }}
      register: _pod_quadlet_file
      when:
        - _pod_info.pods | length == 0
      changed_when: false
      ignore_errors: true

    - name: Podman systemd restart pod or container | gather info about the container {{ target }}
      containers.podman.podman_container_info:
        name: "{{ target }}"
      register: _container_info
      when:
        - _pod_info.pods | length == 0
        - _pod_quadlet_file.rc | d(1) != 0
    # - debug: var=_container_info
    # - pause:

    - name: Podman systemd restart pod or container | generate _target_state from _pod_info or _container_info
      ansible.builtin.set_fact:
        _target_state: "{{ _pod_info.pods[0].State | lower if _pod_info.pods | length > 0 else 'defined' if _pod_quadlet_file.rc | d(1) == 0
          else _container_info.containers[0].State.Status | lower if _container_info.containers | length > 0 else 'unknown' }}"
    # - debug: var=_target_state
    # - pause:

    - name: Podman systemd restart pod or container | start/restart systemd service for {{ target ~ '-pod' if _pod_info.pods | length > 0 else target }}
      environment:
        XDG_RUNTIME_DIR: "{{ _xdg_runtime_dir }}"
      ansible.builtin.systemd_service:
        name: "{{ target ~ '-pod' if (_pod_info.pods | length > 0 or _pod_quadlet_file.rc | d(1) == 0) else target }}"
        daemon_reload: true
        # enabled: true
        scope: "{{ _systemd_scope }}"
        state: "{{ 'restarted' if quadlet.changed | bool or _target_state != 'running' or _podman_container_create_changed | d(false) | bool else 'started' }}"
